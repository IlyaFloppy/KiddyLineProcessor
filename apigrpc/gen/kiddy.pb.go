// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: kiddy.proto

package gen

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sports   []string `protobuf:"bytes,1,rep,name=sports,proto3" json:"sports,omitempty"`
	Interval uint32   `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *SubscriptionRequest) Reset() {
	*x = SubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kiddy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionRequest) ProtoMessage() {}

func (x *SubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kiddy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionRequest.ProtoReflect.Descriptor instead.
func (*SubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_kiddy_proto_rawDescGZIP(), []int{0}
}

func (x *SubscriptionRequest) GetSports() []string {
	if x != nil {
		return x.Sports
	}
	return nil
}

func (x *SubscriptionRequest) GetInterval() uint32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

type SubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deltas map[string]float32 `protobuf:"bytes,1,rep,name=deltas,proto3" json:"deltas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
}

func (x *SubscriptionResponse) Reset() {
	*x = SubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kiddy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionResponse) ProtoMessage() {}

func (x *SubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kiddy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionResponse.ProtoReflect.Descriptor instead.
func (*SubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_kiddy_proto_rawDescGZIP(), []int{1}
}

func (x *SubscriptionResponse) GetDeltas() map[string]float32 {
	if x != nil {
		return x.Deltas
	}
	return nil
}

var File_kiddy_proto protoreflect.FileDescriptor

var file_kiddy_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6b, 0x69, 0x64, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a,
	0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x5a, 0x0a, 0x0b, 0x53, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4f, 0x6e, 0x53, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x73,
	0x12, 0x14, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kiddy_proto_rawDescOnce sync.Once
	file_kiddy_proto_rawDescData = file_kiddy_proto_rawDesc
)

func file_kiddy_proto_rawDescGZIP() []byte {
	file_kiddy_proto_rawDescOnce.Do(func() {
		file_kiddy_proto_rawDescData = protoimpl.X.CompressGZIP(file_kiddy_proto_rawDescData)
	})
	return file_kiddy_proto_rawDescData
}

var file_kiddy_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_kiddy_proto_goTypes = []interface{}{
	(*SubscriptionRequest)(nil),  // 0: SubscriptionRequest
	(*SubscriptionResponse)(nil), // 1: SubscriptionResponse
	nil,                          // 2: SubscriptionResponse.DeltasEntry
}
var file_kiddy_proto_depIdxs = []int32{
	2, // 0: SubscriptionResponse.deltas:type_name -> SubscriptionResponse.DeltasEntry
	0, // 1: SportsLines.SubscribeOnSportsLines:input_type -> SubscriptionRequest
	1, // 2: SportsLines.SubscribeOnSportsLines:output_type -> SubscriptionResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_kiddy_proto_init() }
func file_kiddy_proto_init() {
	if File_kiddy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kiddy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kiddy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kiddy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kiddy_proto_goTypes,
		DependencyIndexes: file_kiddy_proto_depIdxs,
		MessageInfos:      file_kiddy_proto_msgTypes,
	}.Build()
	File_kiddy_proto = out.File
	file_kiddy_proto_rawDesc = nil
	file_kiddy_proto_goTypes = nil
	file_kiddy_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SportsLinesClient is the client API for SportsLines service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SportsLinesClient interface {
	SubscribeOnSportsLines(ctx context.Context, opts ...grpc.CallOption) (SportsLines_SubscribeOnSportsLinesClient, error)
}

type sportsLinesClient struct {
	cc grpc.ClientConnInterface
}

func NewSportsLinesClient(cc grpc.ClientConnInterface) SportsLinesClient {
	return &sportsLinesClient{cc}
}

func (c *sportsLinesClient) SubscribeOnSportsLines(ctx context.Context, opts ...grpc.CallOption) (SportsLines_SubscribeOnSportsLinesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SportsLines_serviceDesc.Streams[0], "/SportsLines/SubscribeOnSportsLines", opts...)
	if err != nil {
		return nil, err
	}
	x := &sportsLinesSubscribeOnSportsLinesClient{stream}
	return x, nil
}

type SportsLines_SubscribeOnSportsLinesClient interface {
	Send(*SubscriptionRequest) error
	Recv() (*SubscriptionResponse, error)
	grpc.ClientStream
}

type sportsLinesSubscribeOnSportsLinesClient struct {
	grpc.ClientStream
}

func (x *sportsLinesSubscribeOnSportsLinesClient) Send(m *SubscriptionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sportsLinesSubscribeOnSportsLinesClient) Recv() (*SubscriptionResponse, error) {
	m := new(SubscriptionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SportsLinesServer is the server API for SportsLines service.
type SportsLinesServer interface {
	SubscribeOnSportsLines(SportsLines_SubscribeOnSportsLinesServer) error
}

// UnimplementedSportsLinesServer can be embedded to have forward compatible implementations.
type UnimplementedSportsLinesServer struct {
}

func (*UnimplementedSportsLinesServer) SubscribeOnSportsLines(SportsLines_SubscribeOnSportsLinesServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeOnSportsLines not implemented")
}

func RegisterSportsLinesServer(s *grpc.Server, srv SportsLinesServer) {
	s.RegisterService(&_SportsLines_serviceDesc, srv)
}

func _SportsLines_SubscribeOnSportsLines_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SportsLinesServer).SubscribeOnSportsLines(&sportsLinesSubscribeOnSportsLinesServer{stream})
}

type SportsLines_SubscribeOnSportsLinesServer interface {
	Send(*SubscriptionResponse) error
	Recv() (*SubscriptionRequest, error)
	grpc.ServerStream
}

type sportsLinesSubscribeOnSportsLinesServer struct {
	grpc.ServerStream
}

func (x *sportsLinesSubscribeOnSportsLinesServer) Send(m *SubscriptionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sportsLinesSubscribeOnSportsLinesServer) Recv() (*SubscriptionRequest, error) {
	m := new(SubscriptionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SportsLines_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SportsLines",
	HandlerType: (*SportsLinesServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeOnSportsLines",
			Handler:       _SportsLines_SubscribeOnSportsLines_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "kiddy.proto",
}
